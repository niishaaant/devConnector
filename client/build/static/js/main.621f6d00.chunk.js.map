{"version":3,"sources":["components/layout/spinner.gif","action/alert.js","action/types.js","utils/setAuthToken.js","action/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","action/profile.js","components/profileForms/CreateProfile.js","components/profileForms/EditProfile.js","components/profileForms/AddExperience.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","action/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profileForms/AddEducation.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/layout/Alert.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","console","log","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","to","className","onClick","href","guestLinks","prototype","PropTypes","func","isRequired","object","connect","state","login","email","password","body","JSON","stringify","method","url","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","getCurrentUser","statusText","status","createProfile","history","edit","push","withRouter","company","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","rows","initialState","profile","useEffect","profileData","key","social","Array","isArray","join","addExperience","title","from","current","description","toDateDisable","toggleDisable","checked","disabled","cols","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","user","_id","avatar","slice","map","skill","index","getProfiles","profiles","length","PostItem","addLike","removeLike","deletePost","post","text","likes","comments","date","showActions","class","format","defaultProps","put","delete","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","match","params","ProfileTop","ProfileAbout","trim","split","ProfileExperience","exp","ProfileEducation","edu","school","degree","fieldofstudy","repos","getGithubRepos","username","repo","html_url","rel","stargazers_count","watchers_count","forks_count","getProfileById","userId","experience","education","addEducation","DashboardActions","deleteExperience","experiences","deleteEducation","educations","deleteAccount","window","confirm","Component","component","rest","render","props","getItem","combineReducers","alert","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621f6d00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2c9683e0.gif\";","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOADED_USER = 'LOADED_USER';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOADED_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('https://git.heroku.com/devconnector-niishaaaant.git/api/auth');\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: LOADED_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  const body = JSON.stringify({ name: name, email: email, password: password });\r\n\r\n  try {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: 'https://git.heroku.com/devconnector-niishaaaant.git/api/user',\r\n      data: body,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = JSON.stringify({ email: email, password: password });\r\n\r\n  try {\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: 'https://git.heroku.com/devconnector-niishaaaant.git/api/auth',\r\n      data: body,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../action/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n\tconst authLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/profiles'>Devolopers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/posts'>Posts</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/dashboard'>\r\n\t\t\t\t\t<i className='fas fa-user'></i>{' '}\r\n\t\t\t\t\t<span className='hide-sm'>Dashboard</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={logout} href='#!'>\r\n\t\t\t\t\t<i className='fas fa-sign-out-alt'></i>{' '}\r\n\t\t\t\t\t<span className='hide-sm'>Logout</span>\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n\tconst guestLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/profiles'>Devolopers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/register'>Register</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to='/login'>Login</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<nav className='navbar bg-dark'>\r\n\t\t\t<h1>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<i className='fas fa-code'></i> DevConnector\r\n\t\t\t\t</Link>\r\n\t\t\t</h1>\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n\t\t\t)}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nNavbar.prototype = {\r\n\tlogout: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <div className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>\r\n            <i className='fas fa-code'></i>DevConnector\r\n          </h1>\r\n          <p className='lead'>\r\n            Create developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { login } from '../../action/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            minLength='6'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input type='submit' value='Login' className='btn btn-primary' />\r\n        </div>\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../action/alert';\r\nimport { register } from '../../action/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('passwords do not match', 'danger');\r\n    } else {\r\n      register(name, email, password);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This website uses Gravatar, so if you wand a profile picture, use\r\n            Gravatar Email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            minLength='6'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            minLength='6'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input type='submit' value='Register' className='btn btn-primary' />\r\n        </div>\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Login</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n\tGET_PROFILE,\r\n\tGET_PROFILES,\r\n\tPROFILE_ERROR,\r\n\tUPDATE_PROFILE,\r\n\tCLEAR_PROFILE,\r\n\tACCOUNT_DELETED,\r\n\tGET_REPOS,\r\n} from './types';\r\n\r\n// get current user\r\n\r\nexport const getCurrentUser = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('https://git.heroku.com/devconnector-niishaaaant.git/api/profile/me');\r\n\t\tconsole.log(res.data);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//get all users\r\nexport const getProfiles = () => async (dispatch) => {\r\n\tdispatch({ type: CLEAR_PROFILE });\r\n\ttry {\r\n\t\tconst res = await axios.get('https://git.heroku.com/devconnector-niishaaaant.git/api/profile');\r\n\t\tconsole.log(res.data);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILES,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//get user by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://git.heroku.com/devconnector-niishaaaant.git/api/profile/user/${userId}`\r\n\t\t);\r\n\t\tconsole.log(res.data);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//get github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://git.heroku.com/devconnector-niishaaaant.git/api/profile/github/${username}`\r\n\t\t);\r\n\t\tconsole.log(res.data);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_REPOS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// create or edit a profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n\tdispatch\r\n) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'https://git.heroku.com/devconnector-niishaaaant.git/api/profile',\r\n\t\t\tdata: formData,\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tif (edit === false) {\r\n\t\t\tdispatch(setAlert('Profile Created', 'success'));\r\n\t\t} else {\r\n\t\t\tdispatch(setAlert('Profile Updated', 'success'));\r\n\t\t}\r\n\r\n\t\tif (!edit) {\r\n\t\t\thistory.push('/dashboard');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// add experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'put',\r\n\t\t\turl: 'https://git.heroku.com/devconnector-niishaaaant.git/api/profile/experience',\r\n\t\t\tdata: formData,\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(setAlert('Experience Added', 'success'));\r\n\r\n\t\thistory.push('/dashboard');\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// add education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'put',\r\n\t\t\turl: 'https://git.heroku.com/devconnector-niishaaaant.git/api/profile/education',\r\n\t\t\tdata: formData,\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\r\n\t\tdispatch(setAlert('Education Added', 'success'));\r\n\r\n\t\thistory.push('/dashboard');\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: `https://git.heroku.com/devconnector-niishaaaant.git/api/profile/experience/${id}`,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tdispatch(setAlert('Experience Removed', 'success'));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: `https://git.heroku.com/devconnector-niishaaaant.git/api/profile/education/${id}`,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_PROFILE,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\tdispatch(setAlert('Education Removed', 'success'));\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// delete account\r\nexport const deleteAccount = () => async (dispatch) => {\r\n\tif (window.confirm('Are you sure?')) {\r\n\t\ttry {\r\n\t\t\tawait axios({\r\n\t\t\t\tmethod: 'delete',\r\n\t\t\t\turl: `https://git.heroku.com/devconnector-niishaaaant.git/api/profile`,\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: CLEAR_PROFILE,\r\n\t\t\t});\r\n\t\t\tdispatch({ type: ACCOUNT_DELETED });\r\n\t\t\tdispatch(setAlert('Your Account Has Been Deleted'));\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PROFILE_ERROR,\r\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n","import React, { useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { createProfile } from '../../action/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Let's get some information about you to\r\n        make your profile stand out\r\n      </p>\r\n      <small>* = Field reuired</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learner'>Student or Learner</option>\r\n            <option value='Instructor'>Instructor</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Others'>Others</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea where are you in your career.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your company or the one you work for.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your or a company website.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City and state suggented. (eg. Shimal, Himachal Pradesh)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma to separate values. (eg. Python, Javascript, C++)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Will show your latest repos and a Github link on your profile.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short Bio of yourself'\r\n            name='bio'\r\n            rows='3'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself.</small>\r\n        </div>\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <small>Optional</small>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URI'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URI'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Inastagram URI'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URI'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Youtube URI'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1 p-1' />\r\n        <Link to='/dashboard' className='btn btn-light my-1'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { createProfile, getCurrentUser } from '../../action/profile';\r\n\r\nconst initialState = {\r\n  company: '',\r\n  website: '',\r\n  location: '',\r\n  status: '',\r\n  skills: '',\r\n  githubusername: '',\r\n  bio: '',\r\n  twitter: '',\r\n  facebook: '',\r\n  linkedin: '',\r\n  youtube: '',\r\n  instagram: '',\r\n};\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentUser,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentUser();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(', ');\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentUser, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Let's get some information about you to\r\n        make your profile stand out\r\n      </p>\r\n      <small>* = Field reuired</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learner'>Student or Learner</option>\r\n            <option value='Instructor'>Instructor</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Others'>Others</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea where are you in your career.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your company or the one you work for.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your or a company website.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City and state suggented. (eg. Shimal, Himachal Pradesh)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma to separate values. (eg. Python, Javascript, C++)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Will show your latest repos and a Github link on your profile.\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short Bio of yourself'\r\n            name='bio'\r\n            rows='3'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself.</small>\r\n        </div>\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <small>Optional</small>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URI'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URI'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Inastagram URI'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URI'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Youtube URI'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1 p-1' />\r\n        <Link to='/dashboard' className='btn btn-light my-1'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentUser: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentUser })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { addExperience } from '../../action/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisable, toggleDisable] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisable(!toDateDisable);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisable ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '600px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n\tprofile: {\n\t\tuser: { _id, name, avatar },\n\t\tstatus,\n\t\tcompany,\n\t\tlocation,\n\t\tskills,\n\t},\n}) => {\n\treturn (\n\t\t<div className='profile bg-light'>\n\t\t\t<img src={avatar} alt='' className='round-img' />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>\n\t\t\t\t\t{status} {company && <span> at {company}</span>}\n\t\t\t\t</p>\n\t\t\t\t<p className='my-1'>{location && <span>{location}</span>}</p>\n\t\t\t\t<Link to={`/profile/${_id}`} className='btn btn-primary'>\n\t\t\t\t\tView Profile\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{skills.slice(0, 4).map((skill, index) => (\n\t\t\t\t\t<li key={index} className='text-primary'>\n\t\t\t\t\t\t<i className='fas fa-check'></i> {skill}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nProfileItem.propTypes = {\n\tprofile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../action/profile';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n\tuseEffect(() => {\n\t\tgetProfiles();\n\t}, [getProfiles]);\n\treturn (\n\t\t<Fragment>\n\t\t\t{loading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h1 className='large text-primary'>Devolopers</h1>\n\t\t\t\t\t<p className='lead'>\n\t\t\t\t\t\t<i className='fab fa-connectdevelop'></i> Browse and connect with\n\t\t\t\t\t\tdevelopers\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className='profiles'>\n\t\t\t\t\t\t{profiles.length > 0 ? (\n\t\t\t\t\t\t\tprofiles.map((profile) => (\n\t\t\t\t\t\t\t\t<ProfileItem key={profile._id} profile={profile} />\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h4>No profiles found...</h4>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nProfiles.propTypes = {\n\tgetProfiles: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tprofile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../action/post';\n\nconst PostItem = ({\n\taddLike,\n\tremoveLike,\n\tdeletePost,\n\tauth,\n\tpost: { _id, text, name, avatar, user, likes, comments, date },\n\tshowActions,\n}) => {\n\treturn (\n\t\t<div class='post bg-white my-1'>\n\t\t\t<div>\n\t\t\t\t<Link to={`/profile/${user}`}>\n\t\t\t\t\t<img class='rounded-img my-1' src={avatar} alt='' />\n\t\t\t\t\t<h4>{name}</h4>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div class=''>\n\t\t\t\t<p class='my-1'>{text}</p>\n\t\t\t\t<p className='post-date'>\n\t\t\t\t\tPosted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n\t\t\t\t</p>\n\t\t\t\t{showActions && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<button onClick={(e) => addLike(_id)} class='btn'>\n\t\t\t\t\t\t\t<i class='fas fa-thumbs-up'></i>\n\t\t\t\t\t\t\t{likes.length > 0 && <span> {likes.length}</span>}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class='btn' onClick={(e) => removeLike(_id)}>\n\t\t\t\t\t\t\t<i class='fas fa-thumbs-down'></i>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<Link to={`/posts/${_id}`} class='btn btn-primary'>\n\t\t\t\t\t\t\tDiscussion{' '}\n\t\t\t\t\t\t\t{comments.length > 0 && (\n\t\t\t\t\t\t\t\t<span className='comment-count'>{comments.length}</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t{!auth.loading && user === auth.user._id && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={(e) => deletePost(_id)}\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className='fas fa-times' />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nPostItem.defaultProps = {\n\tshowActions: true,\n};\n\nPostItem.propTypes = {\n\tpost: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n\taddLike: PropTypes.func.isRequired,\n\tremoveLike: PropTypes.func.isRequired,\n\tdeletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n\tPostItem\n);\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n\tDELETE_POST,\n\tGET_POSTS,\n\tGET_POST,\n\tPOST_ERROR,\n\tUPDATE_LIKES,\n\tADD_POST,\n\tADD_COMMENT,\n\tREMOVE_COMMENT,\n} from './types';\n\nexport const getPosts = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get('https://git.heroku.com/devconnector-niishaaaant.git/api/post');\n\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//get single post\nexport const getPost = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`https://git.heroku.com/devconnector-niishaaaant.git/api/post/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: GET_POST,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//add like\nexport const addLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`https://git.heroku.com/devconnector-niishaaaant.git/api/post/like/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//remove like\nexport const removeLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`https://git.heroku.com/devconnector-niishaaaant.git/api/post/unlike/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//delete post\nexport const deletePost = (id) => async (dispatch) => {\n\ttry {\n\t\tawait axios.delete(`https://git.heroku.com/devconnector-niishaaaant.git/api/post/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: id,\n\t\t});\n\n\t\tdispatch(setAlert('Post Removed', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//add post\nexport const addPost = (formData) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.post(`https://git.heroku.com/devconnector-niishaaaant.git/api/post`, formData);\n\n\t\tdispatch({\n\t\t\ttype: ADD_POST,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert('Post Cerated', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`https://git.heroku.com/devconnector-niishaaaant.git/api/post/comment/${postId}`,\n\t\t\tformData\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert('Comment Added', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n//delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n\ttry {\n\t\tawait axios.delete(\n\t\t\t`https://git.heroku.com/devconnector-niishaaaant.git/api/post/comment/${postId}/${commentId}`\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: REMOVE_COMMENT,\n\t\t\tpayload: commentId,\n\t\t});\n\n\t\tdispatch(setAlert('Comment Removed', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../action/post';\nconst PostForm = ({ addPost }) => {\n\tconst [text, setText] = useState('');\n\n\treturn (\n\t\t<div class='post-form'>\n\t\t\t<div class='post-form-header bg-primary'>\n\t\t\t\t<h3>Say something...</h3>\n\t\t\t</div>\n\t\t\t<form\n\t\t\t\tclass='form my-1'\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\taddPost({ text });\n\t\t\t\t\tsetText('');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<textarea\n\t\t\t\t\tid=''\n\t\t\t\t\tcols='30'\n\t\t\t\t\trows='5'\n\t\t\t\t\tplaceholder='Create a post.'\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t></textarea>\n\t\t\t\t<input type='submit' value='Submit' class='btn btn-dark my-1' />\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nPostForm.propTypes = {\n\taddPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../action/post';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n\tuseEffect(() => {\n\t\tgetPosts();\n\t}, [getPosts]);\n\treturn loading ? (\n\t\t<Spinner />\n\t) : (\n\t\t<Fragment>\n\t\t\t<h1 className='large text-primary'>Posts</h1>\n\t\t\t<p className='lead'>\n\t\t\t\t{' '}\n\t\t\t\t<i className='fas fa-user'></i> Welcome to the community\n\t\t\t</p>\n\t\t\t<PostForm />\n\t\t\t<div className='posts'>\n\t\t\t\t{posts.map((post) => (\n\t\t\t\t\t<PostItem key={post._id} post={post} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nPosts.propTypes = {\n\tgetPosts: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tpost: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../action/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n\tconst [text, setText] = useState('');\n\treturn (\n\t\t<div class='post-form'>\n\t\t\t<div class='post-form-header bg-primary'>\n\t\t\t\t<h3>Leave a comment</h3>\n\t\t\t</div>\n\t\t\t<form\n\t\t\t\tclass='form my-1'\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\taddComment(postId, { text });\n\t\t\t\t\tsetText('');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<textarea\n\t\t\t\t\tid=''\n\t\t\t\t\tcols='30'\n\t\t\t\t\trows='5'\n\t\t\t\t\tplaceholder='Write your comment here.'\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t></textarea>\n\t\t\t\t<input type='submit' value='Submit' class='btn btn-dark my-1' />\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nCommentForm.propTypes = {\n\taddComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../action/post';\n\nconst CommentItem = ({\n\tpostId,\n\tcomment: { _id, text, name, avatar, user, date },\n\tauth,\n\tdeleteComment\n}) => (\n\t<div class='post bg-white p-1 my-1'>\n\t\t<div>\n\t\t\t<Link to={`/profile/${user}`}>\n\t\t\t\t<img class='round-img' src={avatar} alt='' />\n\t\t\t\t<h4>{name}</h4>\n\t\t\t</Link>\n\t\t</div>\n\t\t<div>\n\t\t\t<p class='my-1'>{text}</p>\n\t\t\t<p class='post-date'>\n\t\t\t\tPosted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n\t\t\t</p>\n\t\t\t\n\t\t\t{\n\t\t\t\t!auth.loading && user===auth.user._id && (\n\t\t\t\t\t<button onClick={e=> deleteComment(postId, _id)} type='button' className='btn btn-danger'>\n\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t</div>\n);\n\nCommentItem.propTypes = {\n\tpostId: PropTypes.number.isRequired,\n\tcomment: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n\tdeleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../action/post';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n\tuseEffect(() => {\n\t\tgetPost(match.params.id);\n\t}, [getPost]);\n\tconst comments = post.comments\n\t\n\treturn loading || post === null ? (\n\t\t<Spinner />\n\t) : (\n\t\t<Fragment>\n\t\t\t<Link className='btn' to='/posts'>\n\t\t\t\tBack To Posts\n\t\t\t</Link>\n\t\t\t<PostItem post={post} showActions={false} />\n\t\t\t<CommentForm postId={post._id} />\n\t\t\t<div className='comments'>\n\t\t\t\t{post.comments.map((comment) => (\n\t\t\t\t\t<CommentItem key={comment._id} comment={comment} postId={post._id} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t\n\t\t</Fragment>\n\t);\n};\n\nPost.propTypes = {\n\tgetPost: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tpost: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n\tprofile: {\n\t\tstatus,\n\t\tcompany,\n\t\tlocation,\n\t\twebsite,\n\t\tsocial,\n\t\tuser: { name, avatar },\n\t},\n}) => {\n\treturn (\n\t\t<div class='profile-top bg-primary p-2'>\n\t\t\t<img class='rounded-img my-1' src={avatar} alt='' />\n\t\t\t<h1 class='large'>{name}</h1>\n\t\t\t<p class='lead'>\n\t\t\t\t{status} {company && <span> at {company}</span>}\n\t\t\t</p>\n\t\t\t<p>{location && <span>{location}</span>}</p>\n\t\t\t<div class='icons my-1'>\n\t\t\t\t{website && (\n\t\t\t\t\t<a href={website}>\n\t\t\t\t\t\t<i class='fas fa-globe fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{social && social.twitter && (\n\t\t\t\t\t<a href={social.twitter}>\n\t\t\t\t\t\t<i class='fab fa-twitter fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{social && social.facebook && (\n\t\t\t\t\t<a href={social.facebook}>\n\t\t\t\t\t\t<i class='fab fa-facebook fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{social && social.instagram && (\n\t\t\t\t\t<a href={social.instagram}>\n\t\t\t\t\t\t<i class='fab fa-instagram fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{social && social.linkedin && (\n\t\t\t\t\t<a href={social.linkedin}>\n\t\t\t\t\t\t<i class='fab fa-linkedin fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{social && social.youtube && (\n\t\t\t\t\t<a href={social.youtube}>\n\t\t\t\t\t\t<i class='fab fa-youtube fa-2x'></i>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nProfileTop.propTypes = {\n\tprofile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n\tprofile: {\n\t\tbio,\n\t\tskills,\n\t\tuser: { name },\n\t},\n}) => {\n\treturn (\n\t\t<div class='profile-about bg-light p-2'>\n\t\t\t{bio && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h2 class='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n\t\t\t\t\t<p>{bio}</p>\n\t\t\t\t\t<div class='line'></div>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t<h2 class='text-primary'>Skill Set</h2>\n\t\t\t<div class='skills'>\n\t\t\t\t{skills.map((skill) => (\n\t\t\t\t\t<div class='p-1'>\n\t\t\t\t\t\t<i class='fas fa-check'></i>\n\t\t\t\t\t\t{skill}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nProfileAbout.propTypes = {\n\tprofile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n\texp: { company, title, location, current, to, from, description },\n}) => (\n\t<div>\n\t\t<h3 className='text-dark'>{company}</h3>\n\t\t<p>\n\t\t\t<Moment format='YYYY/MM/DD'>{from}</Moment>{' '}\n\t\t\t{!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n\t\t</p>\n\t\t<p>\n\t\t\t<strong>Positon:</strong>\n\t\t\t{title}\n\t\t</p>\n\t\t<p>\n\t\t\t<strong>Description:</strong>\n\t\t\t{description}\n\t\t</p>\n\t</div>\n);\nProfileExperience.propTypes = {\n\texp: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({\n\tedu: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n\t<div>\n\t\t<h3 className='text-dark'>{school}</h3>\n\t\t<p>\n\t\t\t<Moment format='YYYY/MM/DD'>{from}</Moment>{' '}\n\t\t\t{!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n\t\t</p>\n\t\t<p>\n\t\t\t<strong>Degree:</strong>\n\t\t\t{degree}\n\t\t</p>\n\t\t<p>\n\t\t\t<strong>Field Of Study:</strong>\n\t\t\t{fieldofstudy}\n\t\t</p>\n\t\t<p>\n\t\t\t<strong>Description:</strong>\n\t\t\t{description}\n\t\t</p>\n\t</div>\n);\nProfileEducation.propTypes = {\n\tedu: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../action/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\tuseEffect(() => {\n\t\tgetGithubRepos(username);\n\t}, [getGithubRepos, username]);\n\treturn (\n\t\t<div className='profile-github'>\n\t\t\t<h2 className='text-primary my-1'>Github Repos</h2>\n\t\t\t{repos === null ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\trepos.map((repo) => (\n\t\t\t\t\t<div key={repo._id} className='repo bg-white p-1 my-1'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={repo.html_url}\n\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p>{repo.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li className='badge badge-primary'>\n\t\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='badge badge-dark'>\n\t\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='badge badge-primary'>\n\t\t\t\t\t\t\t\t\tForks: {repo.forks_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nProfileGithub.propTypes = {\n\tgetGithubRepos: PropTypes.func.isRequired,\n\trepos: PropTypes.array.isRequired,\n\tuser: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\trepos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../action/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n\tmatch,\n\tgetProfileById,\n\tprofile: { profile, loading },\n\tauth,\n}) => {\n\tuseEffect(() => {\n\t\tgetProfileById(match.params.id);\n\t}, [getProfileById, match.params.id]);\n\treturn (\n\t\t<Fragment>\n\t\t\t{profile === null || loading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Link to='/profiles' className='btn btn-light'>\n\t\t\t\t\t\tBack To Profies\n\t\t\t\t\t</Link>\n\t\t\t\t\t{auth.isAuthenticated &&\n\t\t\t\t\t\tauth.loading === false &&\n\t\t\t\t\t\tauth.user._id === profile.user._id && (\n\t\t\t\t\t\t\t<Link to='/edit-profile' className='btn btn-dark'>\n\t\t\t\t\t\t\t\tEdit Profile\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t<div class='profile-grid my-1'>\n\t\t\t\t\t\t<ProfileTop profile={profile} />\n\t\t\t\t\t\t<ProfileAbout profile={profile} />\n\t\t\t\t\t\t<div class='profile-exp bg-white p-2'>\n\t\t\t\t\t\t\t<h2 class='text-primary'>Experiences</h2>\n\t\t\t\t\t\t\t{profile.experience.length > 0 ? (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t{profile.experience.map((exp) => (\n\t\t\t\t\t\t\t\t\t\t<ProfileExperience key={exp._id} exp={exp} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h4>No Experience Credentials</h4>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='profile-edu bg-white p-2'>\n\t\t\t\t\t\t\t<h2 class='text-primary'>Education</h2>\n\t\t\t\t\t\t\t{profile.education.length > 0 ? (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t{profile.education.map((edu) => (\n\t\t\t\t\t\t\t\t\t\t<ProfileEducation key={edu._id} edu={edu} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h4>No Education Credentials</h4>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{profile.githubusername && (\n\t\t\t\t\t\t\t<ProfileGithub username={profile.githubusername} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nProfile.propTypes = {\n\tgetProfileById: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tprofile: state.profile,\n\tauth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { addEducation } from '../../action/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisable, toggleDisable] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add Your Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that\r\n        you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field Of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisable(!toDateDisable);\r\n              }}\r\n            />{' '}\r\n            Current School or Bootcamp\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisable ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dashboard-buttons'>\r\n      <Link to='/edit-profile' className='btn'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteExperience } from '../../action/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        {' '}\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}{' '}\r\n      </td>\r\n      <td>\r\n        {' '}\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>{' '}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteEducation } from '../../action/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        {' '}\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}{' '}\r\n      </td>\r\n      <td>\r\n        {' '}\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>{' '}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentUser, deleteAccount } from '../../action/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Dashboard = ({\r\n  getCurrentUser,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentUser();\r\n  }, [getCurrentUser]);\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div class='my-2'>\r\n            <button class='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i class='fas fa-user-minus'></i> Delete Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You've not set up your profile yet, please add some info.</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentUser: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentUser, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../action/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOADED_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../action/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOADED_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n\tGET_PROFILE,\r\n\tPROFILE_ERROR,\r\n\tCLEAR_PROFILE,\r\n\tUPDATE_PROFILE,\r\n\tGET_PROFILES,\r\n\tGET_REPOS,\r\n} from '../action/types';\r\n\r\nconst initialState = {\r\n\tprofile: null,\r\n\tprofiles: [],\r\n\trepos: [],\r\n\tloading: true,\r\n\terror: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\r\n\tswitch (type) {\r\n\t\tcase GET_PROFILE:\r\n\t\tcase UPDATE_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase GET_PROFILES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofiles: payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase PROFILE_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tprofile: null,\r\n\t\t\t};\r\n\t\tcase CLEAR_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: null,\r\n\t\t\t\trepos: null,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase GET_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trepos: payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\n\tGET_POSTS,\n\tPOST_ERROR,\n\tUPDATE_LIKES,\n\tDELETE_POST,\n\tADD_POST,\n\tGET_POST,\n\tADD_COMMENT,\n\tREMOVE_COMMENT,\n} from '../action/types';\n\nconst initialState = {\n\tposts: [],\n\tpost: {},\n\tloading: true,\n\terror: {},\n};\n\nexport default function (state = initialState, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase GET_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase GET_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase ADD_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [payload, ...state.posts],\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase DELETE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter((post) => post._id !== payload),\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase POST_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase UPDATE_LIKES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map((post) =>\n\t\t\t\t\tpost._id === payload.id ? { ...post, likes: payload.likes } : post\n\t\t\t\t),\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase ADD_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: { ...state.post, comments: payload },\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase REMOVE_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tcomments: state.post.comments.filter(\n\t\t\t\t\t\t(comment) => comment._id !== payload\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n\talert,\r\n\tauth,\r\n\tprofile,\r\n\tpost,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport CreateProfile from './components/profileForms/CreateProfile';\nimport EditProfile from './components/profileForms/EditProfile';\nimport AddExperience from './components/profileForms/AddExperience';\nimport Profiles from './components/profiles/Profiles';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport Profile from './components/profile/Profile';\nimport AddEducation from './components/profileForms/AddEducation';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './routing/PrivateRoute';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Alert from './components/layout/Alert';\nimport { loadUser } from './action/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n\tsetAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\tuseEffect(() => {\n\t\tstore.dispatch(loadUser());\n\t}, []);\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Router>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Route exact path='/' component={Landing} />\n\t\t\t\t\t<section className='container'>\n\t\t\t\t\t\t<Alert />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/register' component={Register} />\n\t\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t\t<Route exact path='/profiles' component={Profiles} />\n\t\t\t\t\t\t\t<Route exact path='/profile/:id' component={Profile} />\n\t\t\t\t\t\t\t<PrivateRoute exact path='/dashboard' component={Dashboard} />\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/create-profile'\n\t\t\t\t\t\t\t\tcomponent={CreateProfile}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/edit-profile'\n\t\t\t\t\t\t\t\tcomponent={EditProfile}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/add-experience'\n\t\t\t\t\t\t\t\tcomponent={AddExperience}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/add-education'\n\t\t\t\t\t\t\t\tcomponent={AddEducation}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PrivateRoute exact path='/posts' component={Posts} />\n\t\t\t\t\t\t\t<PrivateRoute exact path='/posts/:id' component={Post} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</section>\n\t\t\t\t</Fragment>\n\t\t\t</Router>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}